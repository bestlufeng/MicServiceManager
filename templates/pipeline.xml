<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.7"/>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">
    <script>pipeline {
    agent any

    stages{
        stage(&apos;初始化&apos;){
            steps{
                echo &apos;初始化 successful&apos;
            }
        }
        stage(&apos;拉取代码库&apos;){
            steps{
                echo &apos;拉取代码 successful&apos;
            }
        }
        stage(&apos;分支及版本控制&apos;){
            steps{
                script{
                    echo &apos;版本信息：&apos;
                    def aa = sh(script: &quot;curl -s -w %{http_code} -o /dev/null https://harbor.chuangjiangx.com/api/repositories/scpaas/best-pay/tags/1.1.0 |grep 200&quot;, returnStatus: true)
                    echo &quot;return exitValue :${aa}&quot;
                    if(aa != 0){
                        return hasVersion=&apos;false&apos;

                    }else{
                        return hasVersion=&apos;true&apos;
                    }
                }
                script{
                        echo &quot;分支信息：test&quot;
                        return gitlab_branch = &apos;test&apos;
                }
                script{
                    if (hasVersion == &apos;true&apos; &amp;&amp; gitlab_branch == &apos;master&apos;){
                        echo &quot;将不进行编译和构建stage&quot;
                    }
                }
            }
        }
        stage(&apos;编译代码&apos;){
            when {
                anyOf { expression{ gitlab_branch != &apos;master&apos; };expression { hasVersion == &apos;false&apos; }}
            }
            steps{
                echo &apos;编译 successful&apos;
            }
        }
        stage(&apos;构建镜像&apos;){
            steps{
                echo &quot;${hasVersion}&quot;
                script{
                    if(hasVersion != &apos;true&apos;){
                        echo &apos;执行构建镜像的动作&apos;
                    } else {
                        echo &apos;版本已经存在,不执行镜像构建动作&apos;
                    }
                }
            }
        }
        stage(&apos;部署服务&apos;){
            steps{
                echo &apos;服务部署成功&apos;
                echo &quot;${hasVersion}&quot;
            }
        }
        
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>