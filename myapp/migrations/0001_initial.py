# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-31 15:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('type', models.IntegerField()),
                ('gitlab_branch', models.CharField(max_length=10)),
                ('deploy_paas', models.CharField(max_length=10)),
                ('deploy_type', models.CharField(max_length=10)),
                ('kubernetes_api', models.CharField(max_length=128)),
                ('kubernetes_token', models.CharField(max_length=128)),
                ('kubernetes_namespace', models.CharField(max_length=10)),
                ('mark', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnvConfigParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32)),
                ('value', models.CharField(max_length=128, null=True)),
                ('Env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Env')),
            ],
        ),
        migrations.CreateModel(
            name='MicService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('gitlab_url', models.CharField(max_length=128)),
                ('gitlab_dir', models.CharField(max_length=32)),
                ('docker_file_path', models.CharField(max_length=32)),
                ('limits_cpu', models.IntegerField(default=1000)),
                ('limits_mem', models.IntegerField(default=2000)),
                ('requests_cpu', models.IntegerField(default=500)),
                ('requests_men', models.IntegerField(default=1000)),
                ('port', models.IntegerField(default=8080)),
                ('health_check_type', models.CharField(max_length=32)),
                ('health_check_add', models.CharField(default='/', max_length=128)),
                ('node_port', models.IntegerField(null=True)),
                ('replicas', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MicServiceConfigParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32)),
                ('value', models.CharField(max_length=128, null=True)),
                ('Env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Env')),
                ('MicService', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.MicService')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('Mark', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='micservice',
            name='Service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Service'),
        ),
    ]
